#script 1.0
#license MITLicense
#pclass MakeWidgets GenerateGTK

#% System.DateTime GenerateTime = System.DateTime.UtcNow;
#method GenerateCS string Title


#% string Namespace = "Goedel.Trojan.GTK";
#% List<string> Classes = new List<string> {
#%   "FormWidgetSet"} 	;

using System;
namespace #{Namespace} {

#foreach (var Class in Classes) 

    public partial class #{Class} {
        int Row;
        GridForm GridForm;
        ErrorLabel ErrorLabel = null;
        bool _Changed = false;

        /// <summary>
        /// The object field that this object maps to.
        /// </summary>
        public ObjectField ObjectField { get { return ObjectEntry;  }  }

        /// <summary>
        /// Destruction method, called when the widget is being destroyed.
        /// </summary>
        public override void Destroy  () {
            base.Destroy();
            ObjectField.Destroy(this);
            }


        /// <summary>
        /// Error text to report
        /// </summary>
        public string ReasonInvalid { set {
                ErrorLabel.Raise(ref ErrorLabel, GridForm, Row, value);
                } }

        /// <summary>
        /// When set true, user can modify contents, otherwise value is fixed.
        /// </summary>
        public bool ReadOnly { set { Sensitive = !value; } }

        /// <summary>
        /// Popup tool tip
        /// </summary>
        public string Tip { set { TooltipText = value; } }



        /// <summary>
        /// Copy values from widget to model value field.
        /// </summary>
        public void Apply() {
            ObjectEntry.Apply();
            _Changed = false;
            }



        /// <summary>
        /// Set to true if the user has changed the value.
        /// </summary>
        public bool UserChangedValue { get { return _Changed; }
            set { _Changed = value; } }
    }
#end foreach

}

#end method
#end pclass