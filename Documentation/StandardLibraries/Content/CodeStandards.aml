<?xml version="1.0" encoding="utf-8"?>
<topic id="87a98061-24fe-4bd7-a67f-5e1e2b1a92f7" revisionNumber="1">
  <developerConceptualDocument
    xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5"
    xmlns:xlink="http://www.w3.org/1999/xlink">


    <introduction>
      <para>
        This document describes the coding standards for libraries in the
        PHBBuild Tools, support libraries and the Mathematical Mesh.
      </para>
    </introduction>

    <section address="Section1">
      <title>Coding Standards</title>
      <content>

        <para>
          Every project contains the following elements:
        </para>

        <list class="bullet">
          <listItem>
            <para>A reference to the library Goedel.Utilities</para>          
          </listItem>
          <listItem>
            <para>A file names <localUri>Exceptions.Exceptional</localUri> that defines the exceptions
            thrown by modules in that project.</para>
          </listItem>
          <listItem>
            <para>A GNU Make file called <localUri>Makefile</localUri>. This is generated
            automatically from the project file.</para>
          </listItem>
        </list>
        <para>
          Projects that implement a code synthesizer contain the following
          additional items.
        </para>
        
        <list class="bullet">
          <listItem>
            <para>At least one schema definition file with the extension <localUri>.gdl</localUri>
            </para>
          </listItem>
          <listItem>
            <para>
             A C# file with the extension  <localUri>.cs</localUri> generated from the schema using the Goedel3 custom tool
               </para>
          </listItem>
          <listItem>
            <para>
              At least one script file with the extension <localUri>.script</localUri>
            </para>
          </listItem>
          <listItem>
            <para>
              A C# file with the extension  <localUri>.cs</localUri> generated from the script using the GScript custom tool
            </para>
          </listItem>
        </list>
        <para>
          Projects that define a command line tool contain the following
          additional items.
        </para>
        <list class="bullet">
          <listItem>
            <para>
              At least one command line interface definition file with the extension <localUri>.command</localUri>
            </para>
          </listItem>
          <listItem>
            <para>
              A C# file with the extension  <localUri>.cs</localUri> generated from command line 
              interface definition fileusing the ComandCS custom tool
            </para>
          </listItem>
        </list>       
      </content>
      <sections>
        <section address="References">
          <title>References</title>
          <content>
            <para>
              Every code module contains a reference to the support library Goedel.Utilities.
              This provides convenience functions for testing assertions and throwing
              exceptions if the test fails. It also provides functions to convert to
              and from various base encodings used in internet code and to perform extraction
              of bytes from integer values.
            </para>
          </content>
        </section>
        <section address="Exceptions">
          <title>Exceptions</title>
          <content>
            <para>
              Every project contains a file called
              <localUri>Exceptions.Exceptional</localUri> that defines the exceptions
              thrown by modules in this library.
            </para>
          </content>
        </section>
      </sections>
    </section>

    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <link xlink:href="Other Topic's ID"/>
      <link xlink:href="Other Topic's ID">Link inner text</link>

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>

      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on GitHub</linkText>
          <linkAlternateText>Go to GitHub</linkAlternateText>
          <linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>
