<?xml version="1.0" encoding="utf-8"?>
<!--This file was generated using RFCTool-->
<topic id="87a98061-24fe-4bd7-a67f-5e1e2b1a92f7" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--The Abstract-->
    <introduction>
      <para>
        This document describes the coding standards for libraries in the PHBBuild Tools, support libraries and the Mathematical Mesh. 
      </para>
    </introduction>
    <!--The Body-->
    <section>
      <title> Coding Standards </title>
      <content>
        <para>
          Every project contains the following elements: 
        </para>
        <para>
           A reference to the library Goedel.Utilities 
        </para>
        <para>
           A file nameed _Exceptions.Exceptional_ that defines the exceptions thrown by modules in that project. 
        </para>
        <para>
          A GNU Make file called _Makefile_ which contains the build instructions for non-Windows platforms. This is generated automatically from the Visual Studio project file. 
        </para>
        <para>
          A Microsoft build makefile file called _VS.Make_ which contains additional build instructions  for Windows (if any). For executables, this is a call to ilmerge to make a standalone executable. 
        </para>
        <para>
          Projects that implement a code synthesizer contain the following additional items. 
        </para>
        <para>
           At least one schema definition file with the extension _.gdl_ 
        </para>
        <para>
           A C# file with the extension _.cs_ generated from the schema using the Goedel3 custom tool 
        </para>
        <para>
           At least one script file with the extension _.script_ 
        </para>
        <para>
           A C# file with the extension _.cs_ generated from the script using the GScript custom tool 
        </para>
        <para>
          Projects that define a command line tool contain the following additional items. 
        </para>
        <para>
           At least one command line interface definition file with the extension .command
        </para>
        <para>
           A C# file with the extension .cs generated from command line  interface definition fileusing the ComandCS custom tool 
        </para>
        <para>
          Note that a project that defines a command line tool should be a thin layer interface to a separate library that implements the functionality. This allows  the functionality to be provided in other forms, such as the Visual Studio  integration packages. 
        </para>
      </content>
    </section>
    <section>
      <title>Library References </title>
      <content>
        <para>
          Every code module contains a reference to the support library Goedel.Utilities. This provides convenience functions for testing assertions and throwing exceptions if the test fails. It also provides functions to convert to and from various base encodings used in internet code and to perform extraction of bytes from integer values. 
        </para>
      </content>
    </section>
    <section>
      <title>Exceptions </title>
      <content>
        <para>
          Every code project contains a file called _Exceptions.Exceptional_ that defines the exceptions thrown by modules in this library. 
        </para>
      </content>
    </section>
    <section>
      <title>C# Coding conventions </title>
      <content>
        <para>
          The following rules are enforced: 
        </para>
        <para>
           All classes, properties, fields and methods begin with an upper case character. 
        </para>
        <para>
           All delegate types end with the suffix 'Delegate' 
        </para>
        <para>
           All properties are expression bodied where possible. 
        </para>
        <para>
           All code is fully documented with XML comment tags 
        </para>
      </content>
    </section>
    <!--References-->
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
