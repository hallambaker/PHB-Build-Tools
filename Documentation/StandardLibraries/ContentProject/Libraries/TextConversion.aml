<?xml version="1.0" encoding="utf-8"?>
<!--This file was generated using RFCTool-->
<topic id="1afdeb2b-c964-42b6-8a19-6296acc0480c" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--The Abstract-->
    <introduction>
      <para>
        The text conversion libraries provide various useful transformations on text  strings. 
      </para>
    </introduction>
    <!--The Body-->
    <section>
      <title>File Tools </title>
      <content>
        <definitionTable>
          <definedTerm>
            string Base16(this byte[] Data, int Length = -1) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            string Base32(this byte[] Data) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            string UDF(this byte[] Data, int Precision) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            string Base64(this byte[] Data)  
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
             string Base64URL(this byte[] Data) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            void AppendBase16(this StringBuilder StringBuilder, byte[] Data) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            void AppendBase32(this StringBuilder StringBuilder, byte[] Data) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            void AppendBase64(this StringBuilder StringBuilder, byte[] Data)  
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            void AppendBase64URL(this StringBuilder StringBuilder, byte[] Data) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
        </definitionTable>
        <para>
          See the BaseConvert class for more comprehensive functions. 
        </para>
        <definitionTable>
          <definedTerm>
            string ToUTF8 (this byte[] Data) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            byte[] ToBytes (this string Text)  
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            char ToASCII (this int In) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            bool IsBase64(this int c) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            int CountUTF8 (this string Text) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            byte [] ToUTF8 (this string Text)  
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            int ToUTF8(this string Text, byte[] Buffer, int Position)  
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            static string XMLEscape (this string In) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            string XMLAttributeEscape (this string In) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
             string Wrap (this string Input, int Length=72) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            byte Byte0 (this int Data) ... byte Byte3(this int Data) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            byte Byte0 (this int long) ... byte Byte7(this int long) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            byte Byte0 (this int ulong) ... byte Byte7(this int ulong) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
             byte[] BigEndian (this int Data)  
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
             byte[] NetworkByte(this int Data) 
          </definedTerm>
          <definition>
            <para>
              
            </para>
          </definition>
          <definedTerm>
            void SetBigEndian (this byte[] Array, int Data) 
          </definedTerm>
          <definedTerm>
            void SetBigEndian (this byte[] Array, uint Data) 
          </definedTerm>
          <definedTerm>
            void SetBigEndian (this byte[] Array, ulong Data) 
          </definedTerm>
        </definitionTable>
        <para>
          void SetNetworkByte(this byte[] Array, int Data)  void SetLittleEndian(this byte[] Array, int Data) static byte[] BigEndian(this ulong Data) 
        </para>
        <definitionTable>
          <definedTerm>
            string ToRFC3339 (this DateTime DateTime) 
          </definedTerm>
          <definition>
            <para>
              Convert DateTime value to RFC3339 date time representation. 
            </para>
          </definition>
          <definedTerm>
            DateTime FromRFC3339 (this string Text) 
          </definedTerm>
          <definition>
            <para>
              Convert RFC3339 date time string to DateTime.
            </para>
          </definition>
        </definitionTable>
      </content>
    </section>
    <!--References-->
    <relatedTopics>
    </relatedTopics>
  </developerConceptualDocument>
</topic>
