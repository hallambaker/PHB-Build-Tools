<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Goedel.Tool.Protogen</name>
    </assembly>
    <members>
        <member name="T:Goedel.Tool.ProtoGen.UndefinedReference">
            <summary>
            The input could not be parsed
            </summary>
        </member>
        <member name="P:Goedel.Tool.ProtoGen.UndefinedReference.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Tool.ProtoGen.UndefinedReference.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Tool.ProtoGen.UndefinedReference.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Tool.ProtoGen.UndefinedReference._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Tool.ProtoGen.UndefinedReference.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
        <member name="T:Goedel.Tool.ProtoGen.UndefinedParent">
            <summary>
            The file could not be read.
            </summary>
        </member>
        <member name="P:Goedel.Tool.ProtoGen.UndefinedParent.ExceptionFormatDelegate">
            <summary>The exception formatting delegate. May be overriden 
            locally or globally to implement different exception formatting.</summary>
        </member>
        <member name="P:Goedel.Tool.ProtoGen.UndefinedParent.Templates">
            <summary>Templates for formatting response messages.</summary>
        </member>
        <member name="M:Goedel.Tool.ProtoGen.UndefinedParent.#ctor(System.String,System.Exception,System.Object[])">
            <summary>
            Construct instance for exception
            </summary>		
            <param name="description">Description of the error, may be used to override the 
            generated message.</param>	
            <param name="inner">Inner Exception</param>	
            <param name="args">Optional list of parameterized arguments.</param>
        </member>
        <member name="M:Goedel.Tool.ProtoGen.UndefinedParent._Throw(System.Object)">
            <summary>
            The public fatory delegate
            </summary>
            public static new global::Goedel.Utilities.ThrowNewDelegate ThrowNew = _Throw;
        </member>
        <member name="P:Goedel.Tool.ProtoGen.UndefinedParent.Throw">
            <summary>
            The public fatory delegate
            </summary>
        </member>
    </members>
</doc>
