Independent Submission                             Phillip Hallam-Baker 
INTERNET-DRAFT                                        Comodo Group Inc. 
Intended Status:                                           July 31, 2017
Expires: February 1, 2018


Binary Encodings for JavaScript Object Notation: JSON-B, JSON-C, JSON-D
                      draft-hallambaker-jsonbcd-07

Abstract


Status of This Memo

   This Internet-Draft is submitted in full conformance with the 
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering 
   Task Force (IETF).  Note that other groups may also distribute 
   working documents as Internet-Drafts. The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any 
   time.It is inappropriate to use Internet-Drafts as reference material
   or to cite them other than as "work in progress."

   This Internet-Draft will expire on February 1, 2018

Copyright Notice

   Copyright (c) IETF Trust and the persons identified as the document 
   authors. All rights reserved.

   This document is subject to BCP 78 and the IETF Trust?s Legal 
   Provisions Relating to IETF Documents 
   (http://trustee.ietf.org/license-info) in effect on the date of 
   publication of this document. Please review these documents 
   carefully, as they describe your rights and restrictions with respect
   to this document.
















Hallam-Baker            Expires February 1, 2018                [Page 1]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

Table of Contents

   1.  Definitions  . . . . . . . . . . . . . . . . . . . . . . . . .  3
      1.  Requirements Language . . . . . . . . . . . . . . . . . . .  3
   2.  Introduction . . . . . . . . . . . . . . . . . . . . . . . . .  3
      1.  Objectives  . . . . . . . . . . . . . . . . . . . . . . . .  3
   3.  Extended JSON Grammar  . . . . . . . . . . . . . . . . . . . .  4
   4.  JSON-B . . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
      1.  JSON-B Examples . . . . . . . . . . . . . . . . . . . . . .  8
   5.  JSON-C . . . . . . . . . . . . . . . . . . . . . . . . . . . .  8
      1.  JSON-C Examples . . . . . . . . . . . . . . . . . . . . . .  9
   6.  JSON-D (Data)  . . . . . . . . . . . . . . . . . . . . . . . .  9
   7.  Acknowledgements . . . . . . . . . . . . . . . . . . . . . . . 10
   8.  Security Considerations  . . . . . . . . . . . . . . . . . . . 10
   9.  IANA Considerations  . . . . . . . . . . . . . . . . . . . . . 11
   References . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
      Normative References  . . . . . . . . . . . . . . . . . . . . . 11
   Author's Address . . . . . . . . . . . . . . . . . . . . . . . . . 11




































Hallam-Baker            Expires February 1, 2018                [Page 2]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

1. Definitions

1. Requirements Language


2. Introduction






1. Objectives


         *  Low overhead encoding and decoding

         *  Easy to convert existing encoders and decoders to add binary
            support

         *  Efficient encoding of binary data

         *  Ability to convert from JSON to binary encoding in a 
            streaming mode (i.e. without reading the entire binary data 
            block before beginning encoding.

         *  Lossless encoding of JavaScript data types

         *  The ability to support JSON tag compression and extended 
            data types are considered desirable but not essential for 
            typical network applications.


         JSON-B (Binary)
            Simply encodes JSON data in binary. Only the JavaScript data
            model is supported (i.e. atomic types are integers, double 
            or string). Integers may be 8, 16, 32 or 64 bits either 
            signed or unsigned. Floating points are IEEE 754 binary64 
            format [IEEE-754]. Supports chunked encoding for binary and 
            UTF-8 string types.

         JSON-C (Compact)
            As JSON-B but with support for representing JSON tags in 
            numeric code form (16 bit code space). This is done for both
            compact encoding and to allow simplification of 
            encoders/decoders in constrained environments. Codes may be 
            defined inline or by reference to a known dictionary of 
            codes referenced via a digest value.






Hallam-Baker            Expires February 1, 2018                [Page 3]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

         JSON-D (Data)
            As JSON-C but with support for representing additional data 
            types without loss of precision; IEEE 754 floating point 
            formats, both binary and decimal, Intel's 80 bit floating 
            point, plus 128 bit integers and big integers.


3. Extended JSON Grammar




         x-value
            Binary encodings for data values. As the binary value 
            encodings are all self delimiting

         x-member
            An object member where the value is specified as an X-value 
            and thus does not require a value-separator.

         b-value
            Binary data encodings defined in JSON-B.

         b-string
            Defined length string encoding defined in JSON-B.

         c-def
            Tag code definition defined in JSON-C. These may only appear
            before the beginning of an Object or Array and before any 
            preceeding white space.

         c-tag
            Tag code value defined in JSON-C.

         d-value
            Additional binary data encodings defined in JSON-D for use 
            in scientific data applications.


   JSON-text = (object / array)
      
   object = *cdef begin-object [
            *( member value-separator | x-member )
            (member | x-member) ] end-object
      
   member = tag value
   x-member = tag x-value
      
   tag = string name-separator | b-string | c-tag
    
   array = *cdef begin-array [  *( value value-separator | x-value )



Hallam-Baker            Expires February 1, 2018                [Page 4]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

   (value | x-value) ] end-array
      
   x-value = b-value / d-value
      
   value = false / null / true / object / array / number / string
      
   name-separator  = ws %x3A ws  ; : colon
   value-separator = ws %x2C ws  ; , comma


   begin-array     = ws %x5B ws  ; [ left square bracket
   begin-object    = ws %x7B ws  ; { left curly bracket
   end-array       = ws %x5D ws  ; ] right square bracket
   end-object      = ws %x7D ws  ; } right curly bracket
      
   ws = *( %x20 %x09 %x0A  %x0D )
      
   false = %x66.61.6c.73.65   ; false
   null  = %x6e.75.6c.6c      ; null
   true  = %x74.72.75.65      ; true


   number = [ minus ] int [ frac ] [ exp ]
   decimal-point = %x2E       ; .
   digit1-9 = %x31-39         ; 1-9
   e = %x65 / %x45            ; e E
   exp = e [ minus / plus ] 1*DIGIT
   frac = decimal-point 1*DIGIT
   int = zero / ( digit1-9 *DIGIT )
   minus = %x2D               ; -
   plus = %x2B                ; +
   zero = %x30                ; 0
      
   string = quotation-mark *char quotation-mark
   char = unescaped /
   escape ( %x22 / %x5C / %x2F / %x62 / %x66 /
   %x6E / %x72 / %x74 /  %x75 4HEXDIG )
      
   escape = %x5C              ; \
   quotation-mark = %x22      ; "
   unescaped = %x20-21 / %x23-5B / %x5D-10FFFF













Hallam-Baker            Expires February 1, 2018                [Page 5]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

4. JSON-B


   b-value = b-atom | b-string | b-data | b-integer |
   b-float
      
   b-string = *( string-chunk ) string-term
   b-data = *( data-chunk ) data-last
      
   b-integer = p-int8 | p-int16 | p-int32 | p-int64 | p-bignum16 |
   n-int8 | n-int16 | n-int32 | n-int64 | n-bignum16
      
   b-float = binary64


   +---------------+-----+-------+--------+----------------------------+
   | Production    | Tag | Fixed | Length | Data Description           |
   +---------------+-----+-------+--------+----------------------------+
   | string-term   | x80 | -     | 1      | Terminal String 8 bit      |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | string-term   | x81 | -     | 2      | Terminal String 16 bit     |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | string-term   | x82 | -     | 4      | Terminal String 32 bit     |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | string-term   | x83 | -     | 8      | Terminal String 64 bit     |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | string-chunk  | x84 | -     | 1      | Non-Terminal String 8 bit  |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | string-chunk  | x85 | -     | 2      | Non-Terminal String 16 bit |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | string-chunk  | x86 | -     | 4      | Non-Terminal String 32 bit |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | string-chunk  | x87 | -     | 8      | Non-Terminal String 64 bit |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | data-term     | x88 | -     | 1      | Terminal String 8 bit      |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | data-term     | x89 | -     | 2      | Terminal String 16 bit     |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |






Hallam-Baker            Expires February 1, 2018                [Page 6]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

   +---------------+-----+-------+--------+----------------------------+
   | Production    | Tag | Fixed | Length | Data Description           |
   +---------------+-----+-------+--------+----------------------------+
   | data-term     | x8A | -     | 4      | Terminal String 32 bit     |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | data-term     | X8B | -     | 8      | Terminal String 64 bit     |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | data-chunk    | x8C | -     | 1      | Non-Terminal String 8 bit  |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | data-chunk    | x8D | -     | 2      | Non-Terminal String 16 bit |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | data-chunk    | x8E | -     | 4      | Non-Terminal String 32 bit |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | data-chunk    | x8F | -     | 8      | Non-Terminal String 64 bit |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | p-int8        | xA0 | 1     | -      | Positive 8 bit Integer     |
   |               |     |       |        |                            |
   | p-int16       | xA1 | 2     | -      | Positive 16 bit Integer    |
   |               |     |       |        |                            |
   | p-int32       | xA2 | 4     | -      | Positive 32 bit Integer    |
   |               |     |       |        |                            |
   | p-int64       | xA3 | 8     | -      | Positive 64 bit Integer    |
   |               |     |       |        |                            |
   | p-bignum16    | xA5 | -     | 2      | Positive Bignum 16 bit     |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | n-int8        | xA8 | 1     | -      | Negative 8 bit Integer     |
   |               |     |       |        |                            |
   | n-int16       | xA9 | 2     | -      | Negative 16 bit Integer    |
   |               |     |       |        |                            |
   | n-int32       | xAA | 4     | -      | Negative 32 bit Integer    |
   |               |     |       |        |                            |
   | n-int64       | xAB | 8     | -      | Negative 64 bit Integer    |
   |               |     |       |        |                            |
   | n-bignum16    | xAD | -     | 2      | Negative Bignum 16 bit     |
   |               |     |       |        | length                     |
   |               |     |       |        |                            |
   | binary64      | X92 | 8     | -      | IEEE 754 Floating Point 64 |
   |               |     |       |        | bit                        |
   |               |     |       |        |                            |
   | b-value       | xB0 | -     | -      | True                       |
   |               |     |       |        |                            |
   | b-value       | xB1 | -     | -      | False                      |
   |               |     |       |        |                            |




Hallam-Baker            Expires February 1, 2018                [Page 7]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

   +---------------+-----+-------+--------+----------------------------+
   | Production    | Tag | Fixed | Length | Data Description           |
   +---------------+-----+-------+--------+----------------------------+
   | b-value       | xB2 | -     | -      | Null                       |
   +---------------+-----+-------+--------+----------------------------+


1. JSON-B Examples


   A0 2A                            42 (as 8 bit integer)
   A1 00 2A                         42 (as 16 bit integer)
   A2 00 00 00 2A                   42 (as 32 bit integer)
   A3 00 00 00 00 00 00 00 2A       42 (as 64 bit integer)
   A5 00 01 42                      42 (as Bignum)
      
   80 05 48 65 6c 6c 6f             "Hello" (single chunk)
   81 00 05 48 65 6c 6c 6f          "Hello" (single chunk)
   84 05 48 65 6c 6c 6f 80 00       "Hello" (as two chunks)
      
   92 3f f0 00 00 00 00 00 00       1.0
   92 40 24 00 00 00 00 00 00       10.0
   92 40 09 21 fb 54 44 2e ea       3.14159265359
   92 bf f0 00 00 00 00 00 00       -1.0
      
   B0                               true
   B1                               false
   B2                               null

5. JSON-C




   +---------------+-----+-------+--------+----------------------------+
   | Production    | Tag | Fixed | Length | Data Description           |
   +---------------+-----+-------+--------+----------------------------+
   | c-tag         | xC0 | 1     | -      | 8 bit tag code             |
   |               |     |       |        |                            |
   | c-tag         | xC1 | 2     | -      | 16 bit tag code            |
   |               |     |       |        |                            |
   | c-tag         | xC2 | 4     | -      | 32 bit tag code            |
   |               |     |       |        |                            |
   | c-def         | xC4 | 1     | -      | 8 bit tag definition       |
   |               |     |       |        |                            |
   | c-def         | xC5 | 2     | -      | 16 bit tag definition      |
   |               |     |       |        |                            |
   | c-def         | xC6 | 4     | -      | 32 bit tag definition      |
   |               |     |       |        |                            |





Hallam-Baker            Expires February 1, 2018                [Page 8]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

   +---------------+-----+-------+--------+----------------------------+
   | Production    | Tag | Fixed | Length | Data Description           |
   +---------------+-----+-------+--------+----------------------------+
   | c-tag         | xC8 | 1     | -      | 8 bit tag code &           |
   |               |     |       |        | definition                 |
   |               |     |       |        |                            |
   | c-tag         | xC9 | 2     | -      | 16 bit tag code &          |
   |               |     |       |        | definition                 |
   |               |     |       |        |                            |
   | c-tag         | xCA | 4     | -      | 32 bit tag code &          |
   |               |     |       |        | definition                 |
   |               |     |       |        |                            |
   | c-def         | xCC | 1     | -      | 8 bit tag dictionary       |
   |               |     |       |        | definition                 |
   |               |     |       |        |                            |
   | c-def         | xCD | 2     | -      | 16 bit tag dictionary      |
   |               |     |       |        | definition                 |
   |               |     |       |        |                            |
   | c-def         | xCE | 4     | -      | 32 bit tag dictionary      |
   |               |     |       |        | definition                 |
   |               |     |       |        |                            |
   | dict-hash     | xDO | 4     | 1      | UDF fingerprint of         |
   |               |     |       |        | dictionary                 |
   +---------------+-----+-------+--------+----------------------------+


1. JSON-C Examples


   C8 20 80 05 48 65 6c 6c 6f       "Hello"    20 = "Hello"
   C4 21 80 05 48 65 6c 6c 6f                  21 = "Hello"
   C0 20                            "Hello"
   C1 00 20                         "Hello"
      
   D0 00 00 01 00 20             Insert dictionary at code 256
   e3 b0 c4 42 98 fc 1c 14
   9a fb f4 c8 99 6f b9 24
   27 ae 41 e4 64 9b 93 4c
   a4 95 99 1b 78 52 b8 55       UDF (C4 21 80 05 48 65 6c 6c 6f)















Hallam-Baker            Expires February 1, 2018                [Page 9]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

6. JSON-D (Data)



   d-value = d-integer | d-float
      
   d-float = binary16 | binary32 | binary128 | binary80 |
   decimal32 | decimal64 | decimal 128

   +---------------+-----+-------+--------+----------------------------+

   +---------------+-----+-------+--------+----------------------------+
   | Production    | Tag | Fixed | Length | Data Description           |
   +---------------+-----+-------+--------+----------------------------+
   | Production    | Tag | Fixed | Length | Data Description           |
   +---------------+-----+-------+--------+----------------------------+
   | p-int64       | xA4 | 16    | -      | Positive 128 bit Integer   |
   |               |     |       |        |                            |
   | p-int64       | xAC | 16    | -      | Positive 128 bit Integer   |
   |               |     |       |        |                            |
   | p-int64       | xA3 | 8     | -      | Positive 64 bit Integer    |
   |               |     |       |        |                            |
   | binary16      | X92 | 2     | -      | IEEE 754 Floating Point 16 |
   |               |     |       |        | bit                        |
   |               |     |       |        |                            |
   | binary32      | X92 | 4     | -      | IEEE 754 Floating Point 32 |
   |               |     |       |        | bit                        |
   |               |     |       |        |                            |
   | binary128     | X92 | 16    | -      | IEEE 754 Floating Point    |
   |               |     |       |        | 128 bit                    |
   |               |     |       |        |                            |
   | intel80       | X92 | 10    | -      | Intel 80 bit extended      |
   |               |     |       |        | binary Floating Point      |
   |               |     |       |        |                            |
   | decimal32     | X92 | 4     | -      | IEEE 754 Floating Point    |
   |               |     |       |        | Decimal 32 bit             |
   |               |     |       |        |                            |
   | decimal64     | X92 | 8     | -      | IEEE 754 Floating Point    |
   |               |     |       |        | Decimal 64 bit             |
   |               |     |       |        |                            |
   | decimal128    | X92 | 16    | -      | IEEE 754 Floating Point    |
   |               |     |       |        | Decimal 128 bit            |
   +---------------+-----+-------+--------+----------------------------+

7. Acknowledgements









Hallam-Baker            Expires February 1, 2018               [Page 10]

Internet-Draft           JSON-B, JSON-C, JSON-D                July 2017

8. Security Considerations





9. IANA Considerations


References

Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate 
              Requirement Levels", BCP 14, RFC 2119, DOI 
              10.17487/RFC2119, March 1997.

   [RFC4627]  Crockford, D., "The application/json Media Type for 
              JavaScript Object Notation (JSON)", RFC 4627, DOI 
              10.17487/RFC4627, July 2006.

   [draft-hallambaker-udf]  Hallam-Baker, P, "Uniform Data Fingerprint 
              (UDF)", Internet-Draft draft-hallambaker-udf-05, 9 May 
              2017.

   [IEEE-754]  , "[Reference Not Found!]".

Author's Address

   Phillip Hallam-Baker 
   Comodo Group Inc. 

   philliph@comodo.com





















Hallam-Baker            Expires February 1, 2018               [Page 11]
